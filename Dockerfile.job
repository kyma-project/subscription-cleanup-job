# Build image
FROM --platform=$BUILDPLATFORM golang:1.24.5-alpine3.22 AS build
WORKDIR /go/src/github.com/kyma-project/kyma-environment-broker

ARG TARGETOS
ARG TARGETARCH

COPY cmd cmd
COPY go.mod go.mod
COPY go.sum go.sum

RUN go mod download

#RUN CGO_ENABLED=0 go build -o /bin/main ./cmd/subscriptioncleanup/main.go
# Build
# the GOARCH has not a default value to allow the binary be built according to the host where the command
# was called. For example, if we call make docker-build in a local env which has the Apple Silicon M1 SO
# the docker BUILDPLATFORM arg will be linux/arm64 when for Apple x86 it will be linux/amd64. Therefore,
# by leaving it empty we can ensure that the container and binary shipped on it will have the same platform.
RUN CGO_ENABLED=0 GOOS=${TARGETOS:-linux} GOARCH=${TARGETARCH} go build -a -o /bin/main ./cmd/subscriptioncleanup/main.go

# Get latest CA certs
FROM alpine:latest AS certs
RUN apk --update add ca-certificates

# Final image
FROM scratch
LABEL source=git@github.com:kyma-project/control-plane.git

COPY --from=certs /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt
COPY --from=build /bin/main /bin/main
